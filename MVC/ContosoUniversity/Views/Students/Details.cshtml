@model ContosoUniversity.Models.Student

@{
    ViewData["Title"] = "Student Details";
}

<h1>Student Details</h1>

<div>
    <h4>@Model.FirstName @Model.LastName</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EnrollmentDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EnrollmentDate)
        </dd>
    </dl>
</div>

<div>
    <h5>Enrolled Courses</h5>
    
    @if (Model.Enrollments != null && Model.Enrollments.Any())
    {
        <table class="table table-sm table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Course ID</th>
                    <th>Course Title</th>
                    <th>Credits</th>
                    <th>Grade</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var enrollment in Model.Enrollments)
                {
                    <tr>
                        <td>@enrollment.CourseID</td>
                        <td>
                            @if (enrollment.Course != null)
                            {
                                @enrollment.Course.Title
                            }
                            else
                            {
                                <span class="text-muted">Course not found</span>
                            }
                        </td>
                        <td>
                            @if (enrollment.Course != null)
                            {
                                @enrollment.Course.Credits
                            }
                        </td>
                        <td>
                            @if (enrollment.Grade.HasValue)
                            {
                                <span class="badge @GetGradeBadgeClass(enrollment.Grade.Value)">
                                    @enrollment.Grade.Value
                                </span>
                            }
                            else
                            {
                                <span class="text-muted">No Grade</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
        <div class="alert alert-info">
            Total enrolled courses: @Model.Enrollments.Count
        </div>
    }
    else
    {
        <div class="alert alert-warning">
            This student is not enrolled in any courses.
        </div>
    }
</div>

<div class="mt-3">
    <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-warning">Edit</a>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@functions {
    public string GetGradeBadgeClass(ContosoUniversity.Models.Grade grade)
    {
        return grade switch
        {
            ContosoUniversity.Models.Grade.A => "bg-success",
            ContosoUniversity.Models.Grade.B => "bg-primary", 
            ContosoUniversity.Models.Grade.C => "bg-info",
            ContosoUniversity.Models.Grade.D => "bg-warning",
            ContosoUniversity.Models.Grade.F => "bg-danger",
            _ => "bg-secondary"
        };
    }
}