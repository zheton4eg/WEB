@model PaginatedList<ContosoUniversity3.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h1>Студенты</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-action">
        <label for="SearchString">Поиск по имени: </label>
            <input type="search" name="SearchString" value="@ViewData["CurrentFilter"]"></input>
            <input type="submit" value="Search" class="btn btn-primary"/>
            <a asp-action="Index" class="btn btn-primary">Показать всех</a>
    </div>

</form>

<table class="table">
    <thead>
        <tr>
            @* <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]"asp-route-currentFilter=@ViewData["CurrentFilter"]">LastName)</a>
            </th>
            <th>
                FirstName)
            </th> *@
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Студент</a>
            </th>

            <th>
                 <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParam"]">EnrollmentDate)</a>
                
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
           @*  <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem=>item.FullName)
            </td>         
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    string prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
	string nextDisabled = !Model.HasNextPage	 ? "disabled" : "";
}
<a	asp-action="Index"
	asp-route-sortOrder="@ViewData["CurrentSort"]"
	asp-route-pageNumber="@(Model.PageIndex-1)"
	asp-route-currentFilter="@ViewData["CurrentFilter"]"
	class="btn btn-default @prevDisabled">
	Previous
</a>

<a	asp-action="Index"
	asp-route-sortOrder="@ViewData["CurrentSort"]"
	asp-route-pageNumber="@(Model.PageIndex+1)"
	asp-route-currentFilter="@ViewData["CurrentFilter"]"
	class="btn btn-default @nextDisabled"
	>
	Next
</a>